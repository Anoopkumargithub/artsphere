var __defProp = Object.defineProperty;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {
    enumerable: true,
    configurable: true,
    writable: true,
    value
}) : obj[key] = value;
var __spreadValues = (a, b) => {
    for (var prop in b || (b = {}))
        if (__hasOwnProp.call(b, prop))
            __defNormalProp(a, prop, b[prop]);
    if (__getOwnPropSymbols)
        for (var prop of __getOwnPropSymbols(b)) {
            if (__propIsEnum.call(b, prop))
                __defNormalProp(a, prop, b[prop]);
        }
    return a;
};
class CustomStyle {
    constructor(key, customStyle) {
        this.key = key;
        this.customStyle = customStyle;
    }
    getKey() {
        return this.key;
    }
    toCustomStyle() {
        return this.customStyle;
    }
    overrideWith(customStyle) {
        if (customStyle.key !== "empty" && this.key !== customStyle.key) {
            throw new Error(`Different keys, ${this.key} doesn't equal to ${customStyle.key}`);
        }
        return new CustomStyle(this.key, __spreadValues(__spreadValues({}, this.customStyle), customStyle.customStyle));
    }
}

export {
    CustomStyle as
    default
};
//# sourceMappingURL=custom-style.js.map