export function mapByTargets(submission, form) {
    return mapBy(submission, form, 'target');
}
export function mapByIds(submission, form) {
    return mapBy(submission, form, 'id');
}

function mapBy(submission, form, by) {
    const from = by === 'id' ? 'target' : 'id';
    const fields = ((form ? .fields ? .length ? ? 0) > 0) ? (form ? .fields ? ? []) : (form ? .fieldsV2 ? ? []);
    const getIdOrTarget = (field, by) => {
        if (by === 'id') {
            return field[by];
        } else if ('inputOptions' in field) {
            return field.inputOptions ? .target;
        } else {
            return field.target;
        }
    };
    return fields.reduce((acc, field) => {
        const source = getIdOrTarget(field, from);
        const destination = getIdOrTarget(field, by);
        if (source &&
            destination &&
            source !== destination &&
            acc.hasOwnProperty(source)) {
            acc[destination] = acc[source];
            const {
                [source]: omitted, ...rest
            } = acc;
            acc = rest;
        }
        return acc;
    }, { ...submission
    });
}
//# sourceMappingURL=submission-mapper.js.map