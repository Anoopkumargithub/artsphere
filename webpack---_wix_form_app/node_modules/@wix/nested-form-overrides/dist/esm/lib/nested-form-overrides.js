import {
    mapBy,
    partition
} from './array-utils';
import {
    isDefined
} from './lang-utils';
import {
    isEmpty
} from './object-utils';
export function applyNestedFormOverrides(parentForm) {
    const fieldsWithFormOverrides = parentForm.fields.filter((field) => isEmpty(field.nestedFormOverrides ? .fieldOverrides));
    const fieldsWithFormOverridesByTarget = mapBy(fieldsWithFormOverrides, (field) => field.target);
    const nestedForms = (parentForm.nestedForms || []).reduce((acc, {
        targets,
        form
    } = {}) => {
        const [targetsWithOverride, targetsWithoutOverride] = partition(targets, (target) => Boolean(fieldsWithFormOverridesByTarget[target]));
        const nestedFormsWithOverrides = targetsWithOverride.map((target) => ({
            targets: [target],
            form: applyOverrides(form, fieldsWithFormOverridesByTarget[target].nestedFormOverrides),
        }));
        const nestedFormsWithoutOverrides = targetsWithoutOverride.length ?
            [{
                targets: targetsWithoutOverride,
                form
            }] :
            [];
        return [
            ...acc,
            ...nestedFormsWithoutOverrides,
            ...nestedFormsWithOverrides,
        ];
    }, []);
    return { ...parentForm,
        nestedForms
    };
}

function applyOverrides(form, overrides) {
    const fieldOverrides = overrides.fieldOverrides;
    return {
        ...form,
        fields: form.fields.map((field) => {
            const {
                hidden: hiddenOverride,
                required: requiredOverride
            } = (fieldOverrides[field.id] || {});
            return {
                ...field,
                ...(isDefined(hiddenOverride) && {
                    hidden: hiddenOverride
                }),
                ...(isDefined(requiredOverride) &&
                    isDefined(field.validation) && {
                        validation: {
                            ...field.validation,
                            required: requiredOverride,
                        },
                    }),
            };
        }),
    };
}
//# sourceMappingURL=nested-form-overrides.js.map