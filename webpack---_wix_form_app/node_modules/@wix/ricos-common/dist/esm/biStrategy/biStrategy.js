import {
    __rest
} from "tslib";
import {
    ricosBICallbacks
} from './ricosBICallbacks';
export function biStrategy(appDefId, metaSiteId, wixRicosVersion, ricosVersion, biSettings, _experiments // eslint-disable-line
) {
    const {
        biCallbacks,
        postId: settingsPostId,
        contentId: settingsContentId
    } = biSettings, rest = __rest(biSettings, ["biCallbacks", "postId", "contentId"]);
    const logger = ricosBICallbacks(Object.assign(Object.assign({}, rest), {
        postId: settingsPostId || settingsContentId || '',
        appDefId,
        metaSiteId,
        wixRicosVersion,
        ricosVersion
    }));
    return {
        helpers: {
            onPluginAdd: (pluginId, entryPoint, version, contentId) => {
                var _a;
                logger.onPluginAdd(pluginId, entryPoint, version, contentId);
                (_a = biCallbacks === null || biCallbacks === void 0 ? void 0 : biCallbacks.onPluginAdd) === null || _a === void 0 ? void 0 : _a.call(biCallbacks, pluginId, entryPoint, version, contentId);
            },
            onPluginAddStep: args => {
                var _a;
                logger.onPluginAddStep(args);
                (_a = biCallbacks === null || biCallbacks === void 0 ? void 0 : biCallbacks.onPluginAddStep) === null || _a === void 0 ? void 0 : _a.call(biCallbacks, args);
            },
            onPluginAddSuccess: (pluginId, entryPoint, params, version, contentId) => {
                var _a;
                logger.onPluginAddSuccess(pluginId, entryPoint, params, version, contentId);
                (_a = biCallbacks === null || biCallbacks === void 0 ? void 0 : biCallbacks.onPluginAddSuccess) === null || _a === void 0 ? void 0 : _a.call(biCallbacks, pluginId, entryPoint, params, version, contentId);
            },
            onPluginDelete: args => {
                var _a;
                logger.onPluginDelete(args);
                (_a = biCallbacks === null || biCallbacks === void 0 ? void 0 : biCallbacks.onPluginDelete) === null || _a === void 0 ? void 0 : _a.call(biCallbacks, args);
            },
            onPublish: (postId, pluginsCount, pluginsDetails, version, contentId) => {
                var _a;
                const appliedContentId = postId || settingsPostId || settingsContentId;
                logger.onPublish(appliedContentId, pluginsCount, pluginsDetails, version, contentId);
                (_a = biCallbacks === null || biCallbacks === void 0 ? void 0 : biCallbacks.onPublish) === null || _a === void 0 ? void 0 : _a.call(biCallbacks, appliedContentId, pluginsCount, pluginsDetails, version, contentId);
            },
            onMenuLoad: args => {
                var _a;
                logger.onMenuLoad(args);
                (_a = biCallbacks === null || biCallbacks === void 0 ? void 0 : biCallbacks.onMenuLoad) === null || _a === void 0 ? void 0 : _a.call(biCallbacks, args);
            },
            onPluginModalOpened: args => {
                var _a;
                logger.onPluginModalOpened(args);
                (_a = biCallbacks === null || biCallbacks === void 0 ? void 0 : biCallbacks.onPluginModalOpened) === null || _a === void 0 ? void 0 : _a.call(biCallbacks, args);
            },
            onViewerAction: (pluginId, actionName, value, contentId) => {
                var _a;
                logger.onViewerAction(pluginId, actionName, value, contentId);
                (_a = biCallbacks === null || biCallbacks === void 0 ? void 0 : biCallbacks.onViewerAction) === null || _a === void 0 ? void 0 : _a.call(biCallbacks, pluginId, actionName, value, contentId);
            },
            onViewerLoaded: args => {
                var _a;
                logger.onViewerLoaded(args);
                (_a = biCallbacks === null || biCallbacks === void 0 ? void 0 : biCallbacks.onViewerLoaded) === null || _a === void 0 ? void 0 : _a.call(biCallbacks, args);
            },
            onOpenEditorSuccess: (version, toolbarType, contentId) => {
                var _a;
                logger.onOpenEditorSuccess(version, toolbarType, contentId);
                (_a = biCallbacks === null || biCallbacks === void 0 ? void 0 : biCallbacks.onOpenEditorSuccess) === null || _a === void 0 ? void 0 : _a.call(biCallbacks, version, toolbarType, contentId);
            },
            onContentEdited: args => {
                var _a;
                logger.onContentEdited(args);
                (_a = biCallbacks === null || biCallbacks === void 0 ? void 0 : biCallbacks.onContentEdited) === null || _a === void 0 ? void 0 : _a.call(biCallbacks, args);
            },
            onInlineToolbarOpen: args => {
                var _a;
                logger.onInlineToolbarOpen(args);
                (_a = biCallbacks === null || biCallbacks === void 0 ? void 0 : biCallbacks.onInlineToolbarOpen) === null || _a === void 0 ? void 0 : _a.call(biCallbacks, args);
            },
            onToolbarButtonClick: args => {
                var _a;
                logger.onToolbarButtonClick(args);
                (_a = biCallbacks === null || biCallbacks === void 0 ? void 0 : biCallbacks.onToolbarButtonClick) === null || _a === void 0 ? void 0 : _a.call(biCallbacks, args);
            },
            onKeyboardShortcutAction: args => {
                var _a;
                logger.onKeyboardShortcutAction(args);
                (_a = biCallbacks === null || biCallbacks === void 0 ? void 0 : biCallbacks.onKeyboardShortcutAction) === null || _a === void 0 ? void 0 : _a.call(biCallbacks, args);
            },
            onMediaUploadStart: (correlationId, pluginId, fileSize, mediaType, version, contentId) => {
                var _a;
                logger.onMediaUploadStart(correlationId, pluginId, fileSize, mediaType, version, contentId);
                (_a = biCallbacks === null || biCallbacks === void 0 ? void 0 : biCallbacks.onMediaUploadStart) === null || _a === void 0 ? void 0 : _a.call(biCallbacks, correlationId, pluginId, fileSize, mediaType, version, contentId);
            },
            onMediaUploadEnd: (correlationId, pluginId, duration, fileSize, mediaType, isSuccess, errorType, version, contentId) => {
                var _a;
                logger.onMediaUploadEnd(correlationId, pluginId, duration, fileSize, mediaType, isSuccess, errorType, version, contentId);
                (_a = biCallbacks === null || biCallbacks === void 0 ? void 0 : biCallbacks.onMediaUploadEnd) === null || _a === void 0 ? void 0 : _a.call(biCallbacks, correlationId, pluginId, duration, fileSize, mediaType, isSuccess, errorType, version, contentId);
            },
            onPluginAction: (eventName, params) => {
                var _a;
                logger.onPluginAction(eventName, params);
                (_a = biCallbacks === null || biCallbacks === void 0 ? void 0 : biCallbacks.onPluginAction) === null || _a === void 0 ? void 0 : _a.call(biCallbacks, eventName, params);
            },
            onPluginsPopOverTabSwitch: args => {
                var _a;
                logger.onPluginsPopOverTabSwitch(args);
                (_a = biCallbacks === null || biCallbacks === void 0 ? void 0 : biCallbacks.onPluginsPopOverTabSwitch) === null || _a === void 0 ? void 0 : _a.call(biCallbacks, args);
            },
            onPluginsPopOverClick: args => {
                var _a;
                logger.onPluginsPopOverClick(args);
                (_a = biCallbacks === null || biCallbacks === void 0 ? void 0 : biCallbacks.onPluginsPopOverClick) === null || _a === void 0 ? void 0 : _a.call(biCallbacks, args);
            },
            onChangePluginSettings: args => {
                var _a;
                logger.onChangePluginSettings(args);
                (_a = biCallbacks === null || biCallbacks === void 0 ? void 0 : biCallbacks.onChangePluginSettings) === null || _a === void 0 ? void 0 : _a.call(biCallbacks, args);
            },
            mediaPluginsDetails: args => {
                var _a;
                logger.mediaPluginsDetails(args);
                (_a = biCallbacks === null || biCallbacks === void 0 ? void 0 : biCallbacks.mediaPluginsDetails) === null || _a === void 0 ? void 0 : _a.call(biCallbacks, args);
            },
        },
    };
}
//# sourceMappingURL=biStrategy.js.map