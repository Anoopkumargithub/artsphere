import {
    __rest
} from "tslib";
import {
    getAbsoluteUrl
} from './services';
const OEMBED_URL = '/rich-content/oembed?url=';
const buildUrl = (url) => OEMBED_URL + getAbsoluteUrl(url);
export const fetchOembed = (url, instance) => {
    return fetch(buildUrl(url), {
        method: 'GET',
        headers: {
            'Content-Type': 'application/json',
            Authorization: instance,
        },
    }).then(res => res.json());
};
const providerBlackList = ['wix', 'facebook'];
export const fetchEmbedData = (instance) => async (url) => {
    try {
        return fetchOembed(url, instance).then(json => {
            const {
                html
            } = json, rest = __rest(json, ["html"]);
            const {
                provider_name
            } = rest;
            const res = providerBlackList.includes((provider_name || '').toLowerCase()) ?
                Object.assign({}, rest) : Object.assign(Object.assign({}, rest), {
                    html
                });
            return res;
        });
    } catch (e) {
        return new Promise(resolve => {
            setTimeout(() => resolve({}), 1);
        });
    }
};
//# sourceMappingURL=fetchEmbedData.js.map