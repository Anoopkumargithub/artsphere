import {
    biStrategy
} from './biStrategy/biStrategy';
import urlResolutionStrategy from './urlResolutionStrategy/urlResolutionStrategy';
import pollsStrategy from './pollsStrategy/pollsStrategy';
import mapStrategy from './mapStrategy/mapStrategy';
import iframeSandboxDomainStrategy from './iframeSandboxDomainStrategy/iframeSandboxDomainStrategy';
import {
    merge
} from 'lodash';
import {
    parseInstance,
    hasPlugin as hasPluginInPlugins,
    hasPollsPluginInContent,
} from './services';
import {
    POLL_TYPE,
    MAP_TYPE
} from 'wix-rich-content-common';
let getHttpClientPromise;
let httpClientPromise;
export const runStrategies = ({
    experiments = {},
    plugins,
    instance,
    wixRicosVersion,
    ricosVersion,
    biSettings,
    httpClient,
    msid = '',
    viewer = false,
    content,
}) => {
    var _a;
    const hasPlugin = (pluginType) => hasPluginInPlugins(pluginType, plugins);
    const {
        metaSiteId: instanceMsid,
        appDefId
    } = parseInstance(instance);
    const metaSiteId = instanceMsid || msid;
    getHttpClientPromise = () => {
        if (!httpClientPromise) {
            httpClientPromise =
                (httpClient && Promise.resolve(httpClient)) ||
                import ( /* webpackChunkName: "wix-ricos-http-client-fallback" */ '@wix/http-client').then(http => new http.HttpClient());
        }
        return httpClientPromise;
    };
    const {
        ricosFeatures,
        wixRicosFeatures
    } = experiments;
    const shouldUsePollStrategy = hasPlugin(POLL_TYPE) && (!viewer || (viewer && hasPollsPluginInContent(content)));
    return merge({
        experiments: ricosFeatures
    }, biStrategy(appDefId, metaSiteId, wixRicosVersion, ricosVersion, biSettings, wixRicosFeatures), urlResolutionStrategy(hasPlugin, instance, metaSiteId, wixRicosFeatures), shouldUsePollStrategy && pollsStrategy(instance, getHttpClientPromise), iframeSandboxDomainStrategy(metaSiteId, wixRicosFeatures), ((_a = wixRicosFeatures === null || wixRicosFeatures === void 0 ? void 0 : wixRicosFeatures.mapStrategy) === null || _a === void 0 ? void 0 : _a.enabled) && hasPlugin(MAP_TYPE) && mapStrategy());
};
export const runStrategiesWithCommonUtils = (props) => ({
    strategies: runStrategies(props),
    getHttpClientPromise,
});
//# sourceMappingURL=runStrategies.js.map