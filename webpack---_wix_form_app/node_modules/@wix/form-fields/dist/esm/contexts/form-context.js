import {
    createContext,
    useContext
} from 'react';
export const FormContext = /*#__PURE__*/ createContext(undefined);
export function useForm() {
    const context = useContext(FormContext);
    if (context === undefined) {
        throw new Error('useForm must be used within a FormProvider');
    }
    return context;
}
export function useNestedFormByTarget(target) {
    var _form$nestedForms, _form$nestedForms2;
    const form = useForm();
    if (!((_form$nestedForms = form.nestedForms) != null && _form$nestedForms.length)) {
        return;
    }
    return (_form$nestedForms2 = form.nestedForms) == null || (_form$nestedForms2 = _form$nestedForms2.find(nestedForm => {
        var _nestedForm$targets;
        return (_nestedForm$targets = nestedForm.targets) == null ? void 0 : _nestedForm$targets.includes(target);
    })) == null ? void 0 : _form$nestedForms2.form;
}
//# sourceMappingURL=form-context.js.map