import React, {
    useEffect,
    useRef
} from 'react';
import ErrorFallback from './error-fallback';
const ControllerError = ({
    children,
    wfConfig,
    onError,
}) => {
    const reportedError = useRef();
    const {
        controllerError
    } = wfConfig;
    useEffect(() => {
        if (controllerError &&
            reportedError.current ? .message !== controllerError.message) {
            reportedError.current = { ...controllerError
            };
            onError ? .(new Error(controllerError.message));
        }
    }, [controllerError, onError]);
    if (controllerError) {
        return (React.createElement(ErrorFallback, {
            errorMessage: controllerError.message,
            errorId: controllerError.id
        }));
    }
    return children;
};
export default ControllerError;
//# sourceMappingURL=controller-error.js.map