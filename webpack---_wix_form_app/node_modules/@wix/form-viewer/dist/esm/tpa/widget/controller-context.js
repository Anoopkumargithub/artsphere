import React, {
    useMemo
} from 'react';
const ControllerContext = React.createContext(undefined);
export const ControllerProvider = React.memo(({
    children,
    wfActions,
    wfConfig,
    wfResults
}) => {
    const value = useMemo(() => ({
        wfActions,
        wfConfig,
        wfResults
    }), [wfActions, wfConfig, wfResults]);
    return (React.createElement(ControllerContext.Provider, {
        value: value
    }, children));
});
export function useController() {
    const context = React.useContext(ControllerContext);
    if (context === undefined) {
        throw new Error('useController must be used within a ControllerProvider');
    }
    return context;
}
//# sourceMappingURL=controller-context.js.map