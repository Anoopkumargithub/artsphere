import React, {
    useEffect,
    useState
} from 'react';
import {
    TPAComponentsProvider,
    Text,
    TextButton,
    TextTypography,
    TextButtonPriority,
} from 'wix-ui-tpa/cssVars';
import styles from './error-fallback.scss';
const TextWithChildren = Text;
const ErrorFallback = ({
    errorMessage,
    errorId
}) => {
    const isSSR = typeof window === 'undefined';
    const [isReady, setIsReady] = useState(isSSR);
    useEffect(() => {
        setIsReady(true);
    }, []);
    if (!isReady) {
        return null;
    }
    return (React.createElement(TPAComponentsProvider, {
            value: {}
        },
        React.createElement("div", {
                "data-hook": "error-fallback-root",
                className: styles.container
            },
            React.createElement(TextWithChildren, {
                className: styles.title,
                typography: TextTypography.smallTitle
            }, "Something went wrong..."),
            errorMessage ? (React.createElement(TextWithChildren, {
                "data-hook": "error-fallback-error-message",
                typography: TextTypography.runningText
            }, errorMessage)) : null,
            errorId ? (React.createElement(TextWithChildren, {
                    "data-hook": "error-fallback-error-id",
                    typography: TextTypography.runningText
                },
                "Error ID: ",
                errorId)) : null,
            React.createElement(TextButton, {
                className: styles.textButton,
                priority: TextButtonPriority.primary,
                onClick: () => window.location.reload()
            }, "Refresh"))));
};
export default ErrorFallback;
//# sourceMappingURL=error-fallback.js.map