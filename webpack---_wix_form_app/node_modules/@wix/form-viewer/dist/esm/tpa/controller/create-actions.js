import {
    FIELD_ASYNC_ACTIONS,
} from '@wix/form-fields/async-actions';
import {
    FORM_ASYNC_ACTIONS
} from '../../form-actions';
const getFieldTypes = (forms) => {
    return forms
        .filter((form) => form !== undefined)
        .map((form) => form.fields)
        .flat()
        .reduce((result, field) => {
            if (result.find((fieldType) => fieldType === field ? .view ? .fieldType)) {
                return result;
            }
            result.push(field ? .view ? .fieldType);
            return result;
        }, []);
};
const bindArguments = (actions, args) => {
    return Object.keys(actions).reduce((result, actionName) => {
        result[actionName] = actions[actionName] ? .(args);
        return result;
    }, {});
};
export const createActions = (forms, {
    httpClient,
    requestCaptcha,
    fedopsLogger,
    wixCodeApi,
}) => {
    const fieldTypes = getFieldTypes(Object.values(forms));
    const formActions = bindArguments(FORM_ASYNC_ACTIONS, {
        httpClient,
        requestCaptcha,
        fedopsLogger,
        wixCodeApi,
    });
    const fieldActions = fieldTypes.reduce((result, type) => {
        if (type in FIELD_ASYNC_ACTIONS) {
            const actions = FIELD_ASYNC_ACTIONS[type];
            const actionsWithProps = bindArguments(actions, {
                httpClient,
                requestCaptcha,
                fedopsLogger,
            });
            result = {
                ...result,
                ...actionsWithProps,
            };
        }
        return result;
    }, {});
    return { ...formActions,
        ...fieldActions
    };
};
//# sourceMappingURL=create-actions.js.map