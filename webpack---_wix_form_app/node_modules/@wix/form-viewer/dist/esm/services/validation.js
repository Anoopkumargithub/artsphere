import {
    isObject
} from './utils';
const removeFalsyValues = (values = {}) => {
    return Object.keys(values).reduce((withoutFalsy, target) => {
        const value = values[target];
        if (value === '' || typeof value === 'undefined' || value === null) {
            return withoutFalsy;
        }
        if (Array.isArray(value) && !value.length) {
            return withoutFalsy;
        }
        if (value instanceof Object && !Object.keys(value).length) {
            return withoutFalsy;
        }
        if (isObject(value)) {
            withoutFalsy[target] = removeFalsyValues(value);
        } else {
            withoutFalsy[target] = value;
        }
        return withoutFalsy;
    }, {});
};
export const validate = async (form, values) => {
    if (!form.id) {
        return;
    }
    const {
        FormValidator
    } = await
    import (
        /* webpackChunkName: "form-validator" */
        '@wix/form-validator');
    const formValidator = new FormValidator([form]);
    return formValidator.validate(form.id, removeFalsyValues(values));
};
//# sourceMappingURL=validation.js.map