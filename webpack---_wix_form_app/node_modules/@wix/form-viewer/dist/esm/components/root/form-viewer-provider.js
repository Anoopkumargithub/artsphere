import {
    BiContext,
    ConfigContext,
    ExperimentsContext,
    ExternalDataProvider,
    ForcedStateContext,
    FormContext,
    FormFieldsContext,
    HttpClientContext,
    StyleParamsContext,
    TranslationContext,
    WixRicosViewerContext,
} from '@wix/form-fields';
import React, {
    useMemo
} from 'react';
import {
    TPAComponentsProvider
} from 'wix-ui-tpa/cssVars';
import {
    useFormBi
} from '../form/use-form-bi';
export const FormViewerProvider = ({
    i18n,
    bi,
    biFormFillSessionId,
    form,
    isMobile,
    isRTL,
    locale,
    externalData,
    fields,
    forcedState,
    styleParams,
    instance,
    children,
    httpClient,
    experiments,
    translationNamespace,
    currency,
    WixRicosViewer,
}) => {
    const translations = useMemo(() => ({
        t: i18n.getFixedT(locale, translationNamespace),
        i18n,
    }), [locale, i18n, translationNamespace]);
    const formBi = useFormBi(form, bi, biFormFillSessionId);
    const config = useMemo(() => ({
        locale,
        instance,
        isMobile,
        currency,
    }), [locale, instance, isMobile, currency]);
    const tpa = useMemo(() => ({
        mobile: isMobile,
        rtl: isRTL,
    }), [isMobile, isRTL]);
    const forcedViewState = useMemo(() => forcedState ? ? [], [forcedState]);
    const styleParamsValue = useMemo(() => styleParams ? ? {}, [styleParams]);
    return (React.createElement(FormFieldsContext.Provider, {
            value: fields
        },
        React.createElement(HttpClientContext.Provider, {
                value: {
                    httpClient
                }
            },
            React.createElement(TranslationContext.Provider, {
                    value: translations
                },
                React.createElement(BiContext.Provider, {
                        value: formBi
                    },
                    React.createElement(ExternalDataProvider, {
                            externalData: externalData
                        },
                        React.createElement(ConfigContext.Provider, {
                                value: config
                            },
                            React.createElement(TPAComponentsProvider, {
                                    value: tpa
                                },
                                React.createElement(ForcedStateContext.Provider, {
                                        value: forcedViewState
                                    },
                                    React.createElement(StyleParamsContext.Provider, {
                                            value: styleParamsValue
                                        },
                                        React.createElement(FormContext.Provider, {
                                                value: form
                                            },
                                            React.createElement(ExperimentsContext.Provider, {
                                                    value: experiments
                                                },
                                                React.createElement(WixRicosViewerContext.Provider, {
                                                    value: WixRicosViewer
                                                }, children)))))))))))));
};
//# sourceMappingURL=form-viewer-provider.js.map