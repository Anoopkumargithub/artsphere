/**
 * A function to create a log object for the 'formFieldFocus' event (evid: 1004)
 *
 * Event description: Form field was focused
 *
 * @param {formFieldFocusParams} params - The parameters for this event
 * @property {string} action_type - blur/focus
 * @property {string} field_id - field id
 * @property {string} field_label - id
 * @property {string} field_target - id
 * @property {string} form_fill_session_id - unique id which defines particular form fill session
 * @property {GUID} form_guid - form schema id
 * @property {string} form_schema_name - form schama name
 * @property {string} form_url - form url
 * @property {string} namespace - namespace
 * @return {LogObject<formFieldFocusParams>} LogObject<formFieldFocusParams>
 */
export function formFieldFocus(params) {
    return {
        evid: 1004,
        src: 156,
        endpoint: 'forms-platform-uou',
        params: params
    };
}
/**
 * A function to create a log object for the 'formFieldEdit' event (evid: 1002)
 *
 * Event description: UoU started filling in fields
 *
 * @param {formFieldEditParams} params - The parameters for this event
 * @property {string} field_id - field_id
 * @property {string} field_label - id
 * @property {string} field_target - id: field_target
 * @property {string} form_fill_session_id - unique id which defines particular form fill session
 * @property {GUID} form_guid - form_guid
 * @property {string} form_schema_name - form schama name
 * @property {string} form_type - form expression (web, standalone, etc.)
 * @property {string} form_url - form url
 * @property {string} namespace - namespace
 * @return {LogObject<formFieldEditParams>} LogObject<formFieldEditParams>
 */
export function formFieldEdit(params) {
    return {
        evid: 1002,
        src: 156,
        endpoint: 'forms-platform-uou',
        params: params
    };
}
/**
 * A function to create a log object for the 'dummyName' event (evid: 1000)
 *
 * @param {dummyNameParams} params - The parameters for this event
 * @property {GUID} form_guid
 * @property {string} namespace
 * @return {LogObject<dummyNameParams>} LogObject<dummyNameParams>
 */
export function dummyName(params) {
    return {
        evid: 1000,
        src: 156,
        endpoint: 'forms-platform-uou',
        params: params
    };
}
/**
 * A function to create a log object for the 'formView' event (evid: 1001)
 *
 * Event description: Form Viewed by UoU
 *
 * @param {formViewParams} params - The parameters for this event
 * @property {string} form_filling_id - form_filling_id
 * @property {GUID} form_guid
 * @property {string} form_schema_name - form schema name
 * @property {string} form_type - form expression (web, standalone, etc.)
 * @property {string} form_url - form url
 * @property {string} mode - preview/live site
 * @property {string} namespace
 * @return {LogObject<formViewParams>} LogObject<formViewParams>
 */
export function formView(params) {
    return {
        evid: 1001,
        src: 156,
        endpoint: 'forms-platform-uou',
        params: params
    };
}
/**
 * A function to create a log object for the 'formErrorAppearedDissapeared' event (evid: 1006)
 *
 * Event description: For error appeared or dissapeared
 *
 * @param {formErrorAppearedDissapearedParams} params - The parameters for this event
 * @property {string} action_type - appeared/dissapeared
 * @property {string} error_name - description of the error appeared
 * @property {string} field_id - field id
 * @property {string} field_label - id
 * @property {string} field_name - name of the field in schema
 * @property {string} field_target - id
 * @property {string} form_fill_session_id - unique id which defines particular form fill session
 * @property {GUID} form_guid - form schema id
 * @property {string} form_schema_name - Form schema name
 * @property {string} form_url - form url
 * @property {string} namespace - namespace
 * @return {LogObject<formErrorAppearedDissapearedParams>} LogObject<formErrorAppearedDissapearedParams>
 */
export function formErrorAppearedDissapeared(params) {
    return {
        evid: 1006,
        src: 156,
        endpoint: 'forms-platform-uou',
        params: params
    };
}
/**
 * A function to create a log object for the 'submitFormClick' event (evid: 1003)
 *
 * Event description: Form Submitted
 *
 * @param {submitFormClickParams} params - The parameters for this event
 * @property {string} error_message - Full error message
 * @property {string} error_reason - Error reason if failed
 * @property {string} form_fill_session_id - unique id which defines particular form fill session
 * @property {GUID} form_guid
 * @property {string} form_schema_name - form schema name
 * @property {string} form_url - form url
 * @property {string} namespace
 * @property {GUID} submission_id - submission id
 * @property {string} submission_status - Success/Failed
 * @return {LogObject<submitFormClickParams>} LogObject<submitFormClickParams>
 */
export function submitFormClick(params) {
    return {
        evid: 1003,
        src: 156,
        endpoint: 'forms-platform-uou',
        params: params
    };
}
//# sourceMappingURL=index.js.map