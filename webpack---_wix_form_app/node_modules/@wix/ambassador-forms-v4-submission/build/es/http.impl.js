import {
    toURLSearchParams
} from '@wix/metro-runtime';
import {
    serializer
} from '@wix/metro-runtime/ambassador';
import {
    resolveUrl
} from '@wix/metro-runtime';
var _appEmbedData = {
    image: '_media'
};
var _array = {
    checkboxGroupOptions: '_checkboxGroup',
    validation: '_inputFieldArrayType',
};
var _arrayItems = {
    number: '_numberType',
    object: '_objectType'
};
var _arrayType = {
    items: '_arrayItems'
};
var _arrayTypeArrayItems = {
    numberOptions: '_inputFieldNumberType',
    objectOptions: '_inputFieldObjectType',
};
var _audioData = {
    audio: '_media',
    coverImage: '_media'
};
var _background = {
    image: '_media'
};
var _boolean = {
    checkboxOptions: '_checkbox'
};
var _bulkCreateSubmissionBySubmitterData = {
    submission: '_formSubmission'
};
var _bulkCreateSubmissionBySubmitterRequest = {
    submissions: '_formSubmission',
    submissionsV2: '_bulkCreateSubmissionBySubmitterData',
};
var _bulkCreateSubmissionBySubmitterResponse = {
    results: '_bulkSubmissionResult',
};
var _bulkDeleteSubmissionRequest = {};
var _bulkDeleteSubmissionResponse = {};
var _bulkMarkSubmissionsAsSeenRequest = {};
var _bulkMarkSubmissionsAsSeenResponse = {};
var _bulkRemoveSubmissionFromTrashBinRequest = {};
var _bulkRemoveSubmissionFromTrashBinResponse = {};
var _bulkSubmissionResult = {
    item: '_formSubmission'
};
var _checkbox = {
    label: '_richContent'
};
var _checkboxGroup = {
    description: '_richContent',
    options: '_option'
};
var _commonImage = {
    urlExpirationDate: 'google.protobuf.Timestamp'
};
var _confirmSubmissionRequest = {};
var _confirmSubmissionResponse = {
    submission: '_formSubmission'
};
var _countDeletedSubmissionsRequest = {};
var _countDeletedSubmissionsResponse = {};
var _countSubmissionsRequest = {};
var _countSubmissionsResponse = {};
var _createCheckoutFromSubmissionRequest = {
    form: '_form',
    submission: '_formSubmission',
};
var _createCheckoutFromSubmissionResponse = {};
var _createSubmissionBySubmitterRequest = {
    submission: '_formSubmission'
};
var _createSubmissionBySubmitterResponse = {
    submission: '_formSubmission'
};
var _createSubmissionRequest = {
    submission: '_formSubmission'
};
var _createSubmissionResponse = {
    submission: '_formSubmission'
};
var _dateTimeInput = {
    description: '_richContent'
};
var _deleteSubmissionRequest = {};
var _deleteSubmissionResponse = {};
var _design = {
    poll: '_pollDesign'
};
var _displayField = {
    header: '_header',
    richText: '_richText'
};
var _dropdown = {
    description: '_richContent'
};
var _fileUpload = {
    description: '_richContent'
};
var _form = {
    createdDate: 'google.protobuf.Timestamp',
    updatedDate: 'google.protobuf.Timestamp',
    fields: '_formField',
    fieldsV2: '_formFieldV2',
    deletedFields: '_formField',
    deletedFieldsV2: '_formFieldV2',
    nestedForms: '_nestedForm',
    limitationRule: '_limitationRule',
};
var _formField = {
    validation: '_validation'
};
var _formFieldV2 = {
    inputOptions: '_inputField',
    displayOptions: '_displayField',
    submitOptions: '_submitButton',
};
var _formSubmission = {
    createdDate: 'google.protobuf.Timestamp',
    updatedDate: 'google.protobuf.Timestamp',
};
var _galleryData = {
    items: '_item',
    options: '_galleryOptions'
};
var _galleryOptions = {
    item: '_itemStyle'
};
var _getDeletedSubmissionRequest = {};
var _getDeletedSubmissionResponse = {
    submission: '_formSubmission'
};
var _getMediaUploadURLRequest = {};
var _getMediaUploadURLResponse = {};
var _getSubmissionByCheckoutIdRequest = {};
var _getSubmissionByCheckoutIdResponse = {
    submission: '_formSubmission'
};
var _getSubmissionRequest = {};
var _getSubmissionResponse = {
    submission: '_formSubmission'
};
var _header = {
    content: '_richContent'
};
var _image = {
    media: '_media'
};
var _imageData = {
    image: '_media'
};
var _inputField = {
    stringOptions: '_string',
    numberOptions: '_number',
    booleanOptions: '_boolean',
    arrayOptions: '_array',
    objectOptions: '_object',
    wixFileOptions: '_wixFile',
    paymentOptions: '_payment',
};
var _inputFieldArrayType = {
    items: '_arrayTypeArrayItems'
};
var _inputFieldNumberType = {
    maximum: 'google.protobuf.DoubleValue',
    minimum: 'google.protobuf.DoubleValue',
    multipleOf: 'google.protobuf.DoubleValue',
    enum: 'google.protobuf.DoubleValue',
};
var _inputFieldObjectType = {
    properties: 'Map#_objectTypePropertiesType'
};
var _isFormSubmittableRequest = {};
var _isFormSubmittableResponse = {};
var _item = {
    image: '_image',
    video: '_video'
};
var _itemStyle = {
    ratio: 'google.protobuf.DoubleValue'
};
var _limitationRule = {
    dateTimeDeadline: 'google.protobuf.Timestamp'
};
var _listDeletedSubmissionsRequest = {};
var _listDeletedSubmissionsResponse = {
    submissions: '_formSubmission'
};
var _mapData = {
    mapSettings: '_mapSettings'
};
var _mapSettings = {
    lat: 'google.protobuf.DoubleValue',
    lng: 'google.protobuf.DoubleValue',
};
var _media = {
    duration: 'google.protobuf.DoubleValue'
};
var _mediaItem = {
    image: '_commonImage'
};
var _metadata = {
    createdTimestamp: 'google.protobuf.Timestamp',
    updatedTimestamp: 'google.protobuf.Timestamp',
};
var _nestedForm = {
    form: '_form'
};
var _node = {
    galleryData: '_galleryData',
    imageData: '_imageData',
    mapData: '_mapData',
    pollData: '_pollData',
    appEmbedData: '_appEmbedData',
    videoData: '_videoData',
    audioData: '_audioData',
    nodes: '_node',
};
var _number = {
    numberInputOptions: '_numberInput',
    validation: '_inputFieldNumberType',
};
var _numberInput = {
    description: '_richContent'
};
var _numberType = {
    maximum: 'google.protobuf.DoubleValue',
    minimum: 'google.protobuf.DoubleValue',
    multipleOf: 'google.protobuf.DoubleValue',
    enum: 'google.protobuf.DoubleValue',
};
var _object = {
    object: '_inputFieldObjectType'
};
var _objectType = {
    properties: 'Map#_propertiesType'
};
var _objectTypePropertiesType = {
    numberOptions: '_inputFieldNumberType',
    arrayOptions: '_inputFieldArrayType',
};
var _option = {
    media: '_mediaItem'
};
var _payment = {
    checkboxGroupOptions: '_productCheckboxGroup'
};
var _poll = {
    image: '_media',
    options: '_pollOption'
};
var _pollData = {
    poll: '_poll',
    design: '_design'
};
var _pollDesign = {
    background: '_background'
};
var _pollOption = {
    image: '_media'
};
var _productCheckboxGroup = {
    description: '_richContent',
    options: '_productCheckboxGroupOption',
};
var _productCheckboxGroupOption = {
    media: '_mediaItem'
};
var _propertiesType = {
    number: '_numberType',
    array: '_arrayType'
};
var _querySubmissionRequest = {};
var _querySubmissionResponse = {
    submissions: '_formSubmission'
};
var _querySubmissionsByNamespaceForExportRequest = {};
var _querySubmissionsByNamespaceForExportResponse = {
    submissions: '_formSubmission',
};
var _querySubmissionsByNamespaceRequest = {};
var _querySubmissionsByNamespaceResponse = {
    submissions: '_formSubmission'
};
var _radioGroup = {
    description: '_richContent'
};
var _removeSubmissionFromTrashBinRequest = {};
var _removeSubmissionFromTrashBinResponse = {};
var _restoreSubmissionFromTrashBinRequest = {};
var _restoreSubmissionFromTrashBinResponse = {
    submission: '_formSubmission',
};
var _richContent = {
    nodes: '_node',
    metadata: '_metadata'
};
var _richText = {
    content: '_richContent'
};
var _searchSubmissionsByNamespaceRequest = {};
var _searchSubmissionsByNamespaceResponse = {
    submissions: '_formSubmission',
};
var _string = {
    textInputOptions: '_textInput',
    radioGroupOptions: '_radioGroup',
    dropdownOptions: '_dropdown',
    dateTimeOptions: '_dateTimeInput',
};
var _submitButton = {
    thankYouMessage: '_thankYouMessage'
};
var _textInput = {
    description: '_richContent'
};
var _thankYouMessage = {
    text: '_richContent'
};
var _updateSubmissionRequest = {
    mask: 'google.protobuf.FieldMask',
    submission: '_formSubmission',
};
var _updateSubmissionResponse = {
    submission: '_formSubmission'
};
var _upsertContactFromSubmissionRequest = {};
var _upsertContactFromSubmissionResponse = {};
var _validation = {
    number: '_numberType',
    array: '_arrayType',
    object: '_objectType',
};
var _video = {
    media: '_media',
    thumbnail: '_media'
};
var _videoData = {
    video: '_media',
    thumbnail: '_media'
};
var _wixFile = {
    fileUploadOptions: '_fileUpload'
};

function resolveWixFormsV4FormSubmissionServiceUrl(opts) {
    var domainToMappings = {
        'api._api_base_domain_': [{
            srcPath: '/form-submission-service',
            destPath: '',
        }, ],
        _: [{
            srcPath: '/_api/form-submission-service',
            destPath: '',
        }, ],
        'manage._base_domain_': [{
                srcPath: '/_api/form-submission-service',
                destPath: '',
            },
            {
                srcPath: '/form-submission-service',
                destPath: '',
            },
        ],
        'www._base_domain_': [{
            srcPath: '/_api/form-submission-service',
            destPath: '',
        }, ],
        'bo._base_domain_': [{
            srcPath: '/form-submission-service',
            destPath: '',
        }, ],
        'wixbo.ai': [{
            srcPath: '/form-submission-service',
            destPath: '',
        }, ],
        'www.wixapis.com': [{
                srcPath: '/form-submission-service',
                destPath: '',
            },
            {
                srcPath: '/_api/form-submission-service',
                destPath: '',
            },
        ],
        'apps._base_domain_': [{
            srcPath: '/form-submission-service',
            destPath: '',
        }, ],
    };
    return resolveUrl(Object.assign(opts, {
        domainToMappings: domainToMappings
    }));
}

function resolveWixFormsV4FormSubmissionContactUpsertServiceUrl(opts) {
    var domainToMappings = {
        'bo._base_domain_': [{
            srcPath: '/form-submission-contact-mapping-service',
            destPath: '',
        }, ],
        'wixbo.ai': [{
            srcPath: '/form-submission-contact-mapping-service',
            destPath: '',
        }, ],
        'www.wixapis.com': [{
                srcPath: '/form-submission-contact-mapping-service',
                destPath: '',
            },
            {
                srcPath: '/_api/form-submission-contact-mapping-service',
                destPath: '',
            },
        ],
    };
    return resolveUrl(Object.assign(opts, {
        domainToMappings: domainToMappings
    }));
}

function resolveWixFormsV4FormPaymentServiceUrl(opts) {
    var domainToMappings = {
        'bo._base_domain_': [{
            srcPath: '/form-payment-service',
            destPath: '',
        }, ],
        'wixbo.ai': [{
            srcPath: '/form-payment-service',
            destPath: '',
        }, ],
        'www.wixapis.com': [{
                srcPath: '/_api/form-payment-service',
                destPath: '',
            },
            {
                srcPath: '/form-payment-service',
                destPath: '',
            },
        ],
        'manage._base_domain_': [{
            srcPath: '/form-payment-service',
            destPath: '',
        }, ],
    };
    return resolveUrl(Object.assign(opts, {
        domainToMappings: domainToMappings
    }));
}
/** Create checkout from submission. */
export function createCheckoutFromSubmission(payload) {
    var _a = serializer(_createCheckoutFromSubmissionRequest, {
            _appEmbedData: _appEmbedData,
            _array: _array,
            _arrayItems: _arrayItems,
            _arrayType: _arrayType,
            _arrayTypeArrayItems: _arrayTypeArrayItems,
            _audioData: _audioData,
            _background: _background,
            _boolean: _boolean,
            _checkbox: _checkbox,
            _checkboxGroup: _checkboxGroup,
            _commonImage: _commonImage,
            _dateTimeInput: _dateTimeInput,
            _design: _design,
            _displayField: _displayField,
            _dropdown: _dropdown,
            _fileUpload: _fileUpload,
            _form: _form,
            _formField: _formField,
            _formFieldV2: _formFieldV2,
            _formSubmission: _formSubmission,
            _galleryData: _galleryData,
            _galleryOptions: _galleryOptions,
            _header: _header,
            _image: _image,
            _imageData: _imageData,
            _inputField: _inputField,
            _inputFieldArrayType: _inputFieldArrayType,
            _inputFieldNumberType: _inputFieldNumberType,
            _inputFieldObjectType: _inputFieldObjectType,
            _item: _item,
            _itemStyle: _itemStyle,
            _limitationRule: _limitationRule,
            _mapData: _mapData,
            _mapSettings: _mapSettings,
            _media: _media,
            _mediaItem: _mediaItem,
            _metadata: _metadata,
            _nestedForm: _nestedForm,
            _node: _node,
            _number: _number,
            _numberInput: _numberInput,
            _numberType: _numberType,
            _object: _object,
            _objectType: _objectType,
            _objectTypePropertiesType: _objectTypePropertiesType,
            _option: _option,
            _payment: _payment,
            _poll: _poll,
            _pollData: _pollData,
            _pollDesign: _pollDesign,
            _pollOption: _pollOption,
            _productCheckboxGroup: _productCheckboxGroup,
            _productCheckboxGroupOption: _productCheckboxGroupOption,
            _propertiesType: _propertiesType,
            _radioGroup: _radioGroup,
            _richContent: _richContent,
            _richText: _richText,
            _string: _string,
            _submitButton: _submitButton,
            _textInput: _textInput,
            _thankYouMessage: _thankYouMessage,
            _validation: _validation,
            _video: _video,
            _videoData: _videoData,
            _wixFile: _wixFile,
        }),
        toReq = _a.toJSON,
        fromReq = _a.fromJSON;
    var fromRes = serializer(_createCheckoutFromSubmissionResponse, {}).fromJSON;

    function __createCheckoutFromSubmission(_a) {
        var host = _a.host;
        var serializedData = toReq(payload);
        var metadata = {
            entityFqdn: 'wix.forms.v4.submission',
            method: 'POST',
            methodFqn: 'wix.forms.v4.FormPaymentService.CreateCheckoutFromSubmission',
            url: resolveWixFormsV4FormPaymentServiceUrl({
                protoPath: '/v4/submissions/checkouts',
                data: serializedData,
                host: host,
            }),
            data: serializedData,
            transformResponse: fromRes,
        };
        return metadata;
    }
    __createCheckoutFromSubmission.fromReq = fromReq;
    __createCheckoutFromSubmission.__isAmbassador = true;
    return __createCheckoutFromSubmission;
}
/** Is payment form submittable (ecom platform is installed and site is published). */
export function isFormSubmittable(payload) {
    var _a = serializer(_isFormSubmittableRequest, {}),
        toReq = _a.toJSON,
        fromReq = _a.fromJSON;
    var fromRes = serializer(_isFormSubmittableResponse, {}).fromJSON;

    function __isFormSubmittable(_a) {
        var host = _a.host;
        var serializedData = toReq(payload);
        var metadata = {
            entityFqdn: 'wix.forms.v4.submission',
            method: 'POST',
            methodFqn: 'wix.forms.v4.FormPaymentService.IsFormSubmittable',
            url: resolveWixFormsV4FormPaymentServiceUrl({
                protoPath: '/v4/forms/submittable',
                data: serializedData,
                host: host,
            }),
            data: serializedData,
            transformResponse: fromRes,
        };
        return metadata;
    }
    __isFormSubmittable.fromReq = fromReq;
    __isFormSubmittable.__isAmbassador = true;
    return __isFormSubmittable;
}
/** Upserts contact from submission. */
export function upsertContactFromSubmission(payload) {
    var _a = serializer(_upsertContactFromSubmissionRequest, {}),
        toReq = _a.toJSON,
        fromReq = _a.fromJSON;
    var fromRes = serializer(_upsertContactFromSubmissionResponse, {}).fromJSON;

    function __upsertContactFromSubmission(_a) {
        var host = _a.host;
        var serializedData = toReq(payload);
        var metadata = {
            entityFqdn: 'wix.forms.v4.submission',
            method: 'POST',
            methodFqn: 'wix.forms.v4.FormSubmissionContactUpsertService.UpsertContactFromSubmission',
            url: resolveWixFormsV4FormSubmissionContactUpsertServiceUrl({
                protoPath: '/v4/submissions-contacts',
                data: serializedData,
                host: host,
            }),
            data: serializedData,
            transformResponse: fromRes,
        };
        return metadata;
    }
    __upsertContactFromSubmission.fromReq = fromReq;
    __upsertContactFromSubmission.__isAmbassador = true;
    return __upsertContactFromSubmission;
}
/**
 * > **Notes:** <br>
 * > - The Form Submission API is only available in Wix Studio and Editor X.
 * > - The Form Submission API only works with the Wix Forms app. Call [GetAppInstance](https://dev.wix.com/docs/rest/api-reference/app-management/apps/app-instance/get-app-instance) to confirm that the app named `wix_forms` is installed on the site.
 * <br>
 * Creates a new submission.
 */
export function createSubmission(payload) {
    var _a = serializer(_createSubmissionRequest, {
            _formSubmission: _formSubmission
        }),
        toReq = _a.toJSON,
        fromReq = _a.fromJSON;
    var fromRes = serializer(_createSubmissionResponse, {
        _formSubmission: _formSubmission,
    }).fromJSON;

    function __createSubmission(_a) {
        var host = _a.host;
        var serializedData = toReq(payload);
        var metadata = {
            entityFqdn: 'wix.forms.v4.submission',
            method: 'POST',
            methodFqn: 'wix.forms.v4.FormSubmissionService.CreateSubmission',
            url: resolveWixFormsV4FormSubmissionServiceUrl({
                protoPath: '/v4/submissions',
                data: serializedData,
                host: host,
            }),
            data: serializedData,
            transformResponse: fromRes,
        };
        return metadata;
    }
    __createSubmission.fromReq = fromReq;
    __createSubmission.__isAmbassador = true;
    return __createSubmission;
}
/**
 * Creates a new submission with specified submitter for a given form.
 * Internal, migration only.
 */
export function createSubmissionBySubmitter(payload) {
    var _a = serializer(_createSubmissionBySubmitterRequest, {
            _formSubmission: _formSubmission
        }),
        toReq = _a.toJSON,
        fromReq = _a.fromJSON;
    var fromRes = serializer(_createSubmissionBySubmitterResponse, {
        _formSubmission: _formSubmission
    }).fromJSON;

    function __createSubmissionBySubmitter(_a) {
        var host = _a.host;
        var serializedData = toReq(payload);
        var metadata = {
            entityFqdn: 'wix.forms.v4.submission',
            method: 'POST',
            methodFqn: 'wix.forms.v4.FormSubmissionService.CreateSubmissionBySubmitter',
            url: resolveWixFormsV4FormSubmissionServiceUrl({
                protoPath: '/v4/submissions/by-submitter',
                data: serializedData,
                host: host,
            }),
            data: serializedData,
            transformResponse: fromRes,
        };
        return metadata;
    }
    __createSubmissionBySubmitter.fromReq = fromReq;
    __createSubmissionBySubmitter.__isAmbassador = true;
    return __createSubmissionBySubmitter;
}
/**
 * Creates multiple submissions with specified submitters.
 * Internal, migration only.
 */
export function bulkCreateSubmissionBySubmitter(payload) {
    var _a = serializer(_bulkCreateSubmissionBySubmitterRequest, {
            _bulkCreateSubmissionBySubmitterData: _bulkCreateSubmissionBySubmitterData,
            _formSubmission: _formSubmission
        }),
        toReq = _a.toJSON,
        fromReq = _a.fromJSON;
    var fromRes = serializer(_bulkCreateSubmissionBySubmitterResponse, {
        _bulkSubmissionResult: _bulkSubmissionResult,
        _formSubmission: _formSubmission
    }).fromJSON;

    function __bulkCreateSubmissionBySubmitter(_a) {
        var host = _a.host;
        var serializedData = toReq(payload);
        var metadata = {
            entityFqdn: 'wix.forms.v4.submission',
            method: 'POST',
            methodFqn: 'wix.forms.v4.FormSubmissionService.BulkCreateSubmissionBySubmitter',
            url: resolveWixFormsV4FormSubmissionServiceUrl({
                protoPath: '/v4/bulk/submissions/by-submitter',
                data: serializedData,
                host: host,
            }),
            data: serializedData,
            transformResponse: fromRes,
        };
        return metadata;
    }
    __bulkCreateSubmissionBySubmitter.fromReq = fromReq;
    __bulkCreateSubmissionBySubmitter.__isAmbassador = true;
    return __bulkCreateSubmissionBySubmitter;
}
/**
 * > **Notes:** <br>
 * > - The Form Submission API is only available in Wix Studio and Editor X.
 * > - The Form Submission API only works with the Wix Forms app. Call [GetAppInstance](https://dev.wix.com/docs/rest/api-reference/app-management/apps/app-instance/get-app-instance) to confirm that the app named `wix_forms` is installed on the site.
 * <br>
 * Retrieves a submission by ID.
 */
export function getSubmission(payload) {
    var _a = serializer(_getSubmissionRequest, {}),
        toReq = _a.toJSON,
        fromReq = _a.fromJSON;
    var fromRes = serializer(_getSubmissionResponse, {
        _formSubmission: _formSubmission,
    }).fromJSON;

    function __getSubmission(_a) {
        var host = _a.host;
        var serializedData = toReq(payload);
        var metadata = {
            entityFqdn: 'wix.forms.v4.submission',
            method: 'GET',
            methodFqn: 'wix.forms.v4.FormSubmissionService.GetSubmission',
            url: resolveWixFormsV4FormSubmissionServiceUrl({
                protoPath: '/v4/submissions/{submissionId}',
                data: serializedData,
                host: host,
            }),
            params: toURLSearchParams(serializedData),
            transformResponse: fromRes,
        };
        return metadata;
    }
    __getSubmission.fromReq = fromReq;
    __getSubmission.__isAmbassador = true;
    return __getSubmission;
}
/** Retrieves a submission by checkout ID. */
export function getSubmissionByCheckoutId(payload) {
    var _a = serializer(_getSubmissionByCheckoutIdRequest, {}),
        toReq = _a.toJSON,
        fromReq = _a.fromJSON;
    var fromRes = serializer(_getSubmissionByCheckoutIdResponse, {
        _formSubmission: _formSubmission,
    }).fromJSON;

    function __getSubmissionByCheckoutId(_a) {
        var host = _a.host;
        var serializedData = toReq(payload);
        var metadata = {
            entityFqdn: 'wix.forms.v4.submission',
            method: 'GET',
            methodFqn: 'wix.forms.v4.FormSubmissionService.GetSubmissionByCheckoutId',
            url: resolveWixFormsV4FormSubmissionServiceUrl({
                protoPath: '/v4/submissions/checkout/{checkoutId}',
                data: serializedData,
                host: host,
            }),
            params: toURLSearchParams(serializedData),
            transformResponse: fromRes,
        };
        return metadata;
    }
    __getSubmissionByCheckoutId.fromReq = fromReq;
    __getSubmissionByCheckoutId.__isAmbassador = true;
    return __getSubmissionByCheckoutId;
}
/**
 * > **Notes:** <br>
 * > - The Form Submission API is only available in Wix Studio and Editor X.
 * > - The Form Submission API only works with the Wix Forms app. Call [GetAppInstance](https://dev.wix.com/docs/rest/api-reference/app-management/apps/app-instance/get-app-instance) to confirm that the app named `wix_forms` is installed on the site.
 * <br>
 * Updates a submission. <br>
 * Each time the submission is updated, `revision` increments by 1. The existing `revision` must be included when updating the submission. This ensures you're working with the latest submission information, and prevents unintended overwrites.
 */
export function updateSubmission(payload) {
    var _a = serializer(_updateSubmissionRequest, {
            _formSubmission: _formSubmission
        }),
        toReq = _a.toJSON,
        fromReq = _a.fromJSON;
    var fromRes = serializer(_updateSubmissionResponse, {
        _formSubmission: _formSubmission,
    }).fromJSON;

    function __updateSubmission(_a) {
        var host = _a.host;
        var serializedData = toReq(payload);
        var metadata = {
            entityFqdn: 'wix.forms.v4.submission',
            method: 'PATCH',
            methodFqn: 'wix.forms.v4.FormSubmissionService.UpdateSubmission',
            url: resolveWixFormsV4FormSubmissionServiceUrl({
                protoPath: '/v4/submissions/{submission.id}',
                data: serializedData,
                host: host,
            }),
            data: serializedData,
            transformResponse: fromRes,
        };
        return metadata;
    }
    __updateSubmission.fromReq = fromReq;
    __updateSubmission.__isAmbassador = true;
    return __updateSubmission;
}
/**
 * > **Notes:** <br>
 * > - The Form Submission API is only available in Wix Studio and Editor X.
 * > - The Form Submission API only works with the Wix Forms app. Call [GetAppInstance](https://dev.wix.com/docs/rest/api-reference/app-management/apps/app-instance/get-app-instance) to confirm that the app named `wix_forms` is installed on the site.
 * <br>
 * Confirms a submission. <br>
 * You can only confirm a submission that has a `PENDING` status. When using forms from the [Wix Pricing Plans](https://www.wix.com/app-market/paid-plans?referral=collection&appIndex=42&referralTag=made-by-wix&referralSectionName=made-by-wix) app, the default submission status is `PENDING`. When using forms from the Wix Forms app, the default form submission status is `CONFIRMED`. You can change the default status for individual submissions using the [Update Submission](https://dev.wix.com/docs/rest/api-reference/wix-forms/form-submissions/update-submission) endpoint.
 */
export function confirmSubmission(payload) {
    var _a = serializer(_confirmSubmissionRequest, {}),
        toReq = _a.toJSON,
        fromReq = _a.fromJSON;
    var fromRes = serializer(_confirmSubmissionResponse, {
        _formSubmission: _formSubmission,
    }).fromJSON;

    function __confirmSubmission(_a) {
        var host = _a.host;
        var serializedData = toReq(payload);
        var metadata = {
            entityFqdn: 'wix.forms.v4.submission',
            method: 'POST',
            methodFqn: 'wix.forms.v4.FormSubmissionService.ConfirmSubmission',
            url: resolveWixFormsV4FormSubmissionServiceUrl({
                protoPath: '/v4/submissions/{submissionId}/confirm',
                data: serializedData,
                host: host,
            }),
            data: serializedData,
            transformResponse: fromRes,
        };
        return metadata;
    }
    __confirmSubmission.fromReq = fromReq;
    __confirmSubmission.__isAmbassador = true;
    return __confirmSubmission;
}
/**
 * > **Notes:** <br>
 * > - The Form Submission API is only available in Wix Studio and Editor X.
 * > - The Form Submission API only works with the Wix Forms app. Call [GetAppInstance](https://dev.wix.com/docs/rest/api-reference/app-management/apps/app-instance/get-app-instance) to confirm that the app named `wix_forms` is installed on the site.
 * <br>
 * Deletes a submission by ID.
 */
export function deleteSubmission(payload) {
    var _a = serializer(_deleteSubmissionRequest, {}),
        toReq = _a.toJSON,
        fromReq = _a.fromJSON;
    var fromRes = serializer(_deleteSubmissionResponse, {}).fromJSON;

    function __deleteSubmission(_a) {
        var host = _a.host;
        var serializedData = toReq(payload);
        var metadata = {
            entityFqdn: 'wix.forms.v4.submission',
            method: 'DELETE',
            methodFqn: 'wix.forms.v4.FormSubmissionService.DeleteSubmission',
            url: resolveWixFormsV4FormSubmissionServiceUrl({
                protoPath: '/v4/submissions/{submissionId}',
                data: serializedData,
                host: host,
            }),
            params: toURLSearchParams(serializedData),
            transformResponse: fromRes,
        };
        return metadata;
    }
    __deleteSubmission.fromReq = fromReq;
    __deleteSubmission.__isAmbassador = true;
    return __deleteSubmission;
}
/** Deletes submissions by IDS for specific form. */
export function bulkDeleteSubmission(payload) {
    var _a = serializer(_bulkDeleteSubmissionRequest, {}),
        toReq = _a.toJSON,
        fromReq = _a.fromJSON;
    var fromRes = serializer(_bulkDeleteSubmissionResponse, {}).fromJSON;

    function __bulkDeleteSubmission(_a) {
        var host = _a.host;
        var serializedData = toReq(payload);
        var metadata = {
            entityFqdn: 'wix.forms.v4.submission',
            method: 'POST',
            methodFqn: 'wix.forms.v4.FormSubmissionService.BulkDeleteSubmission',
            url: resolveWixFormsV4FormSubmissionServiceUrl({
                protoPath: '/v4/bulk/submissions/delete',
                data: serializedData,
                host: host,
            }),
            data: serializedData,
            transformResponse: fromRes,
        };
        return metadata;
    }
    __bulkDeleteSubmission.fromReq = fromReq;
    __bulkDeleteSubmission.__isAmbassador = true;
    return __bulkDeleteSubmission;
}
/** Restores deleted submission */
export function restoreSubmissionFromTrashBin(payload) {
    var _a = serializer(_restoreSubmissionFromTrashBinRequest, {}),
        toReq = _a.toJSON,
        fromReq = _a.fromJSON;
    var fromRes = serializer(_restoreSubmissionFromTrashBinResponse, {
        _formSubmission: _formSubmission
    }).fromJSON;

    function __restoreSubmissionFromTrashBin(_a) {
        var host = _a.host;
        var serializedData = toReq(payload);
        var metadata = {
            entityFqdn: 'wix.forms.v4.submission',
            method: 'POST',
            methodFqn: 'wix.forms.v4.FormSubmissionService.RestoreSubmissionFromTrashBin',
            url: resolveWixFormsV4FormSubmissionServiceUrl({
                protoPath: '/v4/submissions/trash-bin/{submissionId}/restore',
                data: serializedData,
                host: host,
            }),
            data: serializedData,
            transformResponse: fromRes,
        };
        return metadata;
    }
    __restoreSubmissionFromTrashBin.fromReq = fromReq;
    __restoreSubmissionFromTrashBin.__isAmbassador = true;
    return __restoreSubmissionFromTrashBin;
}
/** Remove deleted submission */
export function removeSubmissionFromTrashBin(payload) {
    var _a = serializer(_removeSubmissionFromTrashBinRequest, {}),
        toReq = _a.toJSON,
        fromReq = _a.fromJSON;
    var fromRes = serializer(_removeSubmissionFromTrashBinResponse, {}).fromJSON;

    function __removeSubmissionFromTrashBin(_a) {
        var host = _a.host;
        var serializedData = toReq(payload);
        var metadata = {
            entityFqdn: 'wix.forms.v4.submission',
            method: 'DELETE',
            methodFqn: 'wix.forms.v4.FormSubmissionService.RemoveSubmissionFromTrashBin',
            url: resolveWixFormsV4FormSubmissionServiceUrl({
                protoPath: '/v4/submissions/trash-bin/{submissionId}',
                data: serializedData,
                host: host,
            }),
            params: toURLSearchParams(serializedData),
            transformResponse: fromRes,
        };
        return metadata;
    }
    __removeSubmissionFromTrashBin.fromReq = fromReq;
    __removeSubmissionFromTrashBin.__isAmbassador = true;
    return __removeSubmissionFromTrashBin;
}
/** Remove multiple deleted submissions */
export function bulkRemoveSubmissionFromTrashBin(payload) {
    var _a = serializer(_bulkRemoveSubmissionFromTrashBinRequest, {}),
        toReq = _a.toJSON,
        fromReq = _a.fromJSON;
    var fromRes = serializer(_bulkRemoveSubmissionFromTrashBinResponse, {}).fromJSON;

    function __bulkRemoveSubmissionFromTrashBin(_a) {
        var host = _a.host;
        var serializedData = toReq(payload);
        var metadata = {
            entityFqdn: 'wix.forms.v4.submission',
            method: 'POST',
            methodFqn: 'wix.forms.v4.FormSubmissionService.BulkRemoveSubmissionFromTrashBin',
            url: resolveWixFormsV4FormSubmissionServiceUrl({
                protoPath: '/v4/submissions/trash-bin/delete',
                data: serializedData,
                host: host,
            }),
            data: serializedData,
            transformResponse: fromRes,
        };
        return metadata;
    }
    __bulkRemoveSubmissionFromTrashBin.fromReq = fromReq;
    __bulkRemoveSubmissionFromTrashBin.__isAmbassador = true;
    return __bulkRemoveSubmissionFromTrashBin;
}
/** List deleted submissions */
export function listDeletedSubmissions(payload) {
    var _a = serializer(_listDeletedSubmissionsRequest, {}),
        toReq = _a.toJSON,
        fromReq = _a.fromJSON;
    var fromRes = serializer(_listDeletedSubmissionsResponse, {
        _formSubmission: _formSubmission,
    }).fromJSON;

    function __listDeletedSubmissions(_a) {
        var host = _a.host;
        var serializedData = toReq(payload);
        var metadata = {
            entityFqdn: 'wix.forms.v4.submission',
            method: 'GET',
            methodFqn: 'wix.forms.v4.FormSubmissionService.ListDeletedSubmissions',
            url: resolveWixFormsV4FormSubmissionServiceUrl({
                protoPath: '/v4/submissions/trash-bin',
                data: serializedData,
                host: host,
            }),
            params: toURLSearchParams(serializedData),
            transformResponse: fromRes,
        };
        return metadata;
    }
    __listDeletedSubmissions.fromReq = fromReq;
    __listDeletedSubmissions.__isAmbassador = true;
    return __listDeletedSubmissions;
}
/** Get deleted submission */
export function getDeletedSubmission(payload) {
    var _a = serializer(_getDeletedSubmissionRequest, {}),
        toReq = _a.toJSON,
        fromReq = _a.fromJSON;
    var fromRes = serializer(_getDeletedSubmissionResponse, {
        _formSubmission: _formSubmission,
    }).fromJSON;

    function __getDeletedSubmission(_a) {
        var host = _a.host;
        var serializedData = toReq(payload);
        var metadata = {
            entityFqdn: 'wix.forms.v4.submission',
            method: 'GET',
            methodFqn: 'wix.forms.v4.FormSubmissionService.GetDeletedSubmission',
            url: resolveWixFormsV4FormSubmissionServiceUrl({
                protoPath: '/v4/submissions/trash-bin/{submissionId}',
                data: serializedData,
                host: host,
            }),
            params: toURLSearchParams(serializedData),
            transformResponse: fromRes,
        };
        return metadata;
    }
    __getDeletedSubmission.fromReq = fromReq;
    __getDeletedSubmission.__isAmbassador = true;
    return __getDeletedSubmission;
}
/** Deprecated on '2023-08-08'. Use QuerySubmissionsByNamespace. */
export function querySubmission(payload) {
    var _a = serializer(_querySubmissionRequest, {}),
        toReq = _a.toJSON,
        fromReq = _a.fromJSON;
    var fromRes = serializer(_querySubmissionResponse, {
        _formSubmission: _formSubmission,
    }).fromJSON;

    function __querySubmission(_a) {
        var host = _a.host;
        var serializedData = toReq(payload);
        var metadata = {
            entityFqdn: 'wix.forms.v4.submission',
            method: 'POST',
            methodFqn: 'wix.forms.v4.FormSubmissionService.QuerySubmission',
            url: resolveWixFormsV4FormSubmissionServiceUrl({
                protoPath: '/v4/submissions/query',
                data: serializedData,
                host: host,
            }),
            data: serializedData,
            transformResponse: fromRes,
        };
        return metadata;
    }
    __querySubmission.fromReq = fromReq;
    __querySubmission.__isAmbassador = true;
    return __querySubmission;
}
/**
 * > **Notes:** <br>
 * > - The Form Submission API is only available in Wix Studio and Editor X.
 * > - The Form Submission API only works with the Wix Forms app. Call [GetAppInstance](https://dev.wix.com/docs/rest/api-reference/app-management/apps/app-instance/get-app-instance) to confirm that the app named `wix_forms` is installed on the site.
 * <br>
 *
 * Returns a list of up to 100 submissions, given the provided paging, filtering, and sorting.
 *
 * You can only query submissions from a specified namespace. Use the query filter on the `namespace` field, otherwise you will receive an error.
 *
 * For field support for filters and sorting, see [Form Submissions: Supported Filters and Sorting](https://dev.wix.com/docs/rest/api-reference/wix-forms/form-submissions/sort-and-filter).option
 *
 * To learn about working with _Query_ endpoints, see [API Query Language](https://dev.wix.com/api/rest/getting-started/api-query-language), [Sorting and Paging](https://dev.wix.com/api/rest/getting-started/pagination), and [Field Projection](https://dev.wix.com/api/rest/getting-started/field-projection).
 */
export function searchSubmissionsByNamespace(payload) {
    var _a = serializer(_searchSubmissionsByNamespaceRequest, {}),
        toReq = _a.toJSON,
        fromReq = _a.fromJSON;
    var fromRes = serializer(_searchSubmissionsByNamespaceResponse, {
        _formSubmission: _formSubmission
    }).fromJSON;

    function __searchSubmissionsByNamespace(_a) {
        var host = _a.host;
        var serializedData = toReq(payload);
        var metadata = {
            entityFqdn: 'wix.forms.v4.submission',
            method: 'POST',
            methodFqn: 'wix.forms.v4.FormSubmissionService.SearchSubmissionsByNamespace',
            url: resolveWixFormsV4FormSubmissionServiceUrl({
                protoPath: '/v4/submissions/namespace/search',
                data: serializedData,
                host: host,
            }),
            data: serializedData,
            transformResponse: fromRes,
        };
        return metadata;
    }
    __searchSubmissionsByNamespace.fromReq = fromReq;
    __searchSubmissionsByNamespace.__isAmbassador = true;
    return __searchSubmissionsByNamespace;
}
/**
 * > **Notes:** <br>
 * > - The Form Submission API is only available in Wix Studio and Editor X.
 * > - The Form Submission API only works with the Wix Forms app. Call [GetAppInstance](https://dev.wix.com/docs/rest/api-reference/app-management/apps/app-instance/get-app-instance) to confirm that the app named `wix_forms` is installed on the site.
 * <br>
 *
 * Returns a list of up to 100 submissions, given the provided paging, filtering, and sorting.
 *
 * You can only query submissions from a specified namespace. Use the query filter on the `namespace` field, otherwise you will receive an error.
 *
 * For field support for filters and sorting, see [Form Submissions: Supported Filters and Sorting](https://dev.wix.com/docs/rest/api-reference/wix-forms/form-submissions/sort-and-filter).option
 *
 * To learn about working with _Query_ endpoints, see [API Query Language](https://dev.wix.com/api/rest/getting-started/api-query-language), [Sorting and Paging](https://dev.wix.com/api/rest/getting-started/pagination), and [Field Projection](https://dev.wix.com/api/rest/getting-started/field-projection).
 */
export function querySubmissionsByNamespace(payload) {
    var _a = serializer(_querySubmissionsByNamespaceRequest, {}),
        toReq = _a.toJSON,
        fromReq = _a.fromJSON;
    var fromRes = serializer(_querySubmissionsByNamespaceResponse, {
        _formSubmission: _formSubmission
    }).fromJSON;

    function __querySubmissionsByNamespace(_a) {
        var host = _a.host;
        var serializedData = toReq(payload);
        var metadata = {
            entityFqdn: 'wix.forms.v4.submission',
            method: 'POST',
            methodFqn: 'wix.forms.v4.FormSubmissionService.QuerySubmissionsByNamespace',
            url: resolveWixFormsV4FormSubmissionServiceUrl({
                protoPath: '/v4/submissions/namespace/query',
                data: serializedData,
                host: host,
            }),
            data: serializedData,
            transformResponse: fromRes,
        };
        return metadata;
    }
    __querySubmissionsByNamespace.fromReq = fromReq;
    __querySubmissionsByNamespace.__isAmbassador = true;
    return __querySubmissionsByNamespace;
}
/**
 * Returns a list of up to 100 submissions, given the provided paging, filtering, and sorting.
 *
 * You can only query submissions for export from a specified namespace. Use the query filter on the `namespace` field, otherwise you will receive an error.
 *
 * For field support for filters and sorting, see [Form Submissions: Supported Filters and Sorting](https://dev.wix.com/docs/rest/api-reference/wix-forms/form-submissions/sort-and-filter).option
 *
 * To learn about working with _Query_ endpoints, see [API Query Language](https://dev.wix.com/api/rest/getting-started/api-query-language), [Sorting and Paging](https://dev.wix.com/api/rest/getting-started/pagination), and [Field Projection](https://dev.wix.com/api/rest/getting-started/field-projection).
 */
export function querySubmissionsByNamespaceForExport(payload) {
    var _a = serializer(_querySubmissionsByNamespaceForExportRequest, {}),
        toReq = _a.toJSON,
        fromReq = _a.fromJSON;
    var fromRes = serializer(_querySubmissionsByNamespaceForExportResponse, {
        _formSubmission: _formSubmission
    }).fromJSON;

    function __querySubmissionsByNamespaceForExport(_a) {
        var host = _a.host;
        var serializedData = toReq(payload);
        var metadata = {
            entityFqdn: 'wix.forms.v4.submission',
            method: 'POST',
            methodFqn: 'wix.forms.v4.FormSubmissionService.QuerySubmissionsByNamespaceForExport',
            url: resolveWixFormsV4FormSubmissionServiceUrl({
                protoPath: '/v4/submissions/namespace/query/export',
                data: serializedData,
                host: host,
            }),
            data: serializedData,
            transformResponse: fromRes,
        };
        return metadata;
    }
    __querySubmissionsByNamespaceForExport.fromReq = fromReq;
    __querySubmissionsByNamespaceForExport.__isAmbassador = true;
    return __querySubmissionsByNamespaceForExport;
}
/**
 * > **Notes:** <br>
 * > - The Form Submission API is only available in Wix Studio and Editor X.
 * > - The Form Submission API only works with the Wix Forms app. Call [GetAppInstance](https://dev.wix.com/docs/rest/api-reference/app-management/apps/app-instance/get-app-instance) to confirm that the app named `wix_forms` is installed on the site.
 * <br>
 * Counts the number of submissions belonging to the specified forms.
 */
export function countSubmissions(payload) {
    var _a = serializer(_countSubmissionsRequest, {}),
        toReq = _a.toJSON,
        fromReq = _a.fromJSON;
    var fromRes = serializer(_countSubmissionsResponse, {}).fromJSON;

    function __countSubmissions(_a) {
        var host = _a.host;
        var serializedData = toReq(payload);
        var metadata = {
            entityFqdn: 'wix.forms.v4.submission',
            method: 'POST',
            methodFqn: 'wix.forms.v4.FormSubmissionService.CountSubmissions',
            url: resolveWixFormsV4FormSubmissionServiceUrl({
                protoPath: '/v4/submissions/count',
                data: serializedData,
                host: host,
            }),
            data: serializedData,
            transformResponse: fromRes,
        };
        return metadata;
    }
    __countSubmissions.fromReq = fromReq;
    __countSubmissions.__isAmbassador = true;
    return __countSubmissions;
}
/** Counts the number of deleted submissions belonging to the specified forms. */
export function countDeletedSubmissions(payload) {
    var _a = serializer(_countDeletedSubmissionsRequest, {}),
        toReq = _a.toJSON,
        fromReq = _a.fromJSON;
    var fromRes = serializer(_countDeletedSubmissionsResponse, {}).fromJSON;

    function __countDeletedSubmissions(_a) {
        var host = _a.host;
        var serializedData = toReq(payload);
        var metadata = {
            entityFqdn: 'wix.forms.v4.submission',
            method: 'POST',
            methodFqn: 'wix.forms.v4.FormSubmissionService.CountDeletedSubmissions',
            url: resolveWixFormsV4FormSubmissionServiceUrl({
                protoPath: '/v4/submissions/trash-bin/count',
                data: serializedData,
                host: host,
            }),
            data: serializedData,
            transformResponse: fromRes,
        };
        return metadata;
    }
    __countDeletedSubmissions.fromReq = fromReq;
    __countDeletedSubmissions.__isAmbassador = true;
    return __countDeletedSubmissions;
}
/**
 * > **Notes:** <br>
 * > - The Form Submission API is only available in Wix Studio and Editor X.
 * > - The Form Submission API only works with the Wix Forms app. Call [GetAppInstance](https://dev.wix.com/docs/rest/api-reference/app-management/apps/app-instance/get-app-instance) to confirm that the app named `wix_forms` is installed on the site.
 * <br>
 * Retrieves a URL, generated by [Media Manager](https://dev.wix.com/api/rest/media/media-manager/files/generate-file-upload-url), to allow clients to upload a file to a form for submission.
 */
export function getMediaUploadUrl(payload) {
    var _a = serializer(_getMediaUploadURLRequest, {}),
        toReq = _a.toJSON,
        fromReq = _a.fromJSON;
    var fromRes = serializer(_getMediaUploadURLResponse, {}).fromJSON;

    function __getMediaUploadUrl(_a) {
        var host = _a.host;
        var serializedData = toReq(payload);
        var metadata = {
            entityFqdn: 'wix.forms.v4.submission',
            method: 'POST',
            methodFqn: 'wix.forms.v4.FormSubmissionService.GetMediaUploadURL',
            url: resolveWixFormsV4FormSubmissionServiceUrl({
                protoPath: '/v4/submissions/media-upload-url',
                data: serializedData,
                host: host,
            }),
            data: serializedData,
            transformResponse: fromRes,
        };
        return metadata;
    }
    __getMediaUploadUrl.fromReq = fromReq;
    __getMediaUploadUrl.__isAmbassador = true;
    return __getMediaUploadUrl;
}
/**
 * > **Notes:** <br>
 * > - The Form Submission API is only available in Wix Studio and Editor X.
 * > - The Form Submission API only works with the Wix Forms app. Call [GetAppInstance](https://dev.wix.com/docs/rest/api-reference/app-management/apps/app-instance/get-app-instance) to confirm that the app named `wix_forms` is installed on the site.
 * <br>
 * Marks form submissions as "seen". <br>
 * This endpoint marks the submissions as if they were seen by the site owner. Only site collaborators with the [Manage Submission](https://support.wix.com/en/article/roles-permissions-accessing-roles-permissions) permissions can mark submissions.
 */
export function bulkMarkSubmissionsAsSeen(payload) {
    var _a = serializer(_bulkMarkSubmissionsAsSeenRequest, {}),
        toReq = _a.toJSON,
        fromReq = _a.fromJSON;
    var fromRes = serializer(_bulkMarkSubmissionsAsSeenResponse, {}).fromJSON;

    function __bulkMarkSubmissionsAsSeen(_a) {
        var host = _a.host;
        var serializedData = toReq(payload);
        var metadata = {
            entityFqdn: 'wix.forms.v4.submission',
            method: 'POST',
            methodFqn: 'wix.forms.v4.FormSubmissionService.BulkMarkSubmissionsAsSeen',
            url: resolveWixFormsV4FormSubmissionServiceUrl({
                protoPath: '/v4/bulk/submissions/mark-as-seen',
                data: serializedData,
                host: host,
            }),
            data: serializedData,
            transformResponse: fromRes,
        };
        return metadata;
    }
    __bulkMarkSubmissionsAsSeen.fromReq = fromReq;
    __bulkMarkSubmissionsAsSeen.__isAmbassador = true;
    return __bulkMarkSubmissionsAsSeen;
}
//# sourceMappingURL=http.impl.js.map