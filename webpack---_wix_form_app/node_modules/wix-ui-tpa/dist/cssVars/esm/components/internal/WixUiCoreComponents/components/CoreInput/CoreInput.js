import * as React from 'react';
import {
    st,
    classes
} from './CoreInput.st.css';
import classnames from 'classnames';
import {
    filterDataProps
} from '../../utils/FilterDataProps';
export class CoreInput extends React.Component {
    constructor() {
        super(...arguments);
        this.state = {
            focus: false,
        };
        this._extractRef = (ref) => {
            const {
                inputRef
            } = this.props;
            this.input = ref;
            if (inputRef) {
                inputRef(ref);
            }
        };
        this._renderInput = () => {
            const {
                id,
                inputClassName,
                customInput: CustomInputComponent,
                error: errorProp,
                style: styleProp,
                prefix: prefixProps,
                suffix: suffixProp,
                className,
                inputRef,
                ...allOtherProps
            } = this.props;
            const inputProps = {
                id,
                ...allOtherProps,
                ref: this._extractRef,
                className: classnames(classes.nativeInput, inputClassName),
                onBlur: this.handleBlur,
                onFocus: this.handleFocus,
            };
            return React.cloneElement(CustomInputComponent ? React.createElement(CustomInputComponent, null) : React.createElement("input", null), inputProps);
        };
        this.handleFocus = (event) => {
            this.setState({
                focus: true
            });
            this.props.onFocus(event);
        };
        this.handleBlur = (event) => {
            this.setState({
                focus: false
            });
            this.props.onBlur(event);
        };
    }
    render() {
        const {
            focus
        } = this.state;
        const {
            error,
            disabled,
            prefix,
            suffix,
            style: inlineStyle
        } = this.props;
        const {
            className
        } = this.props;
        return (React.createElement("div", {
                className: st(classes.root, {
                    disabled,
                    error: !!error && !disabled,
                    focus
                }, className),
                style: inlineStyle,
                ...filterDataProps(this.props)
            },
            prefix,
            this._renderInput(),
            suffix));
    }
    focus() {
        this.input.focus();
    }
    blur() {
        this.input.blur();
    }
    select() {
        this.input.select();
    }
    getSelectionStart() {
        return this.input.selectionStart;
    }
    getSelectionEnd() {
        return this.input.selectionEnd;
    }
    setSelectionRange(start, end) {
        this.input.setSelectionRange(start, end);
    }
}
CoreInput.displayName = 'CoreInput';
CoreInput.defaultProps = {
    type: 'text',
    onFocus: () => null,
    onBlur: () => null,
    onChange: () => null,
};
//# sourceMappingURL=CoreInput.js.map