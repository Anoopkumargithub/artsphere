import React, {
    useContext
} from 'react';
import {
    ContentTraverserContext
} from 'ricos-context';
import {
    getAnchor
} from './components/Anchor.js';
import {
    nodeViewContainer
} from './rericos/renderers/plugins/nodeViewContainer.js';
import 'ricos-schema';
import 'classnames';
import 'lodash';
import './components/ErrorBoundary.js';
import './rericos/utils/Anchorable.js';
import './rericos/renderers/plugins/ContainerElement.js';
import 'wix-rich-content-common';
import './rericos/utils/paywallSeo.js';
import '../getClassNames-2d778f5a.js';

const Fallback = ({
    node
}) => {
    return null;
};
const RicosNodeDecorated = ({
    node,
    index,
    isRoot,
    shouldParagraphApplyTextStyle
}) => {
    const {
        renderers,
        nodeViewDecorators
    } = useContext(ContentTraverserContext);
    const Renderer = renderers[node.type];
    if (!Renderer) {
        console.error(`RicosNodeDedcorated Error: no renderer passed for node type - ${node.type}`);
        return /* @__PURE__ */ React.createElement(Fallback, {
            node
        });
    }
    return nodeViewDecorators.apply(
        /* @__PURE__ */
        React.createElement(
            Renderer, {
                node,
                RicosNodesRenderer,
                isRoot,
                nodeIndex: index,
                NodeViewContainer: nodeViewContainer,
                shouldParagraphApplyTextStyle
            }
        ),
        node, !!isRoot
    );
};
const RicosNodesRenderer = ({
    nodes,
    isRoot,
    shouldParagraphApplyTextStyle,
    addAnchorsPrefix
}) => {
    return /* @__PURE__ */ React.createElement(React.Fragment, null, nodes.flatMap((node, index) => {
        return [
            /* @__PURE__ */
            React.createElement(
                RicosNodeDecorated, {
                    isRoot,
                    node,
                    index,
                    key: node.id,
                    shouldParagraphApplyTextStyle
                }
            ),
            ...addAnchorsPrefix ? [getAnchor(node, index, addAnchorsPrefix)] : []
        ];
    }));
};

export {
    RicosNodesRenderer as
    default
};
//# sourceMappingURL=RicosNodesRenderer.js.map