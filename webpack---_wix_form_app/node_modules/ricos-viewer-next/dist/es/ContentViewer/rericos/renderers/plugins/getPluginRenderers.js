import {
    Node_Type
} from 'ricos-schema';
import {
    fromExternalNode
} from './fromExternalNode.js';
import 'react';
import 'ricos-content/libs/struct-converters';
import '../../../../getClassNames-2d778f5a.js';
import 'lodash';
import './nodeViewContainer.js';
import 'classnames';
import 'ricos-context';
import '../../../components/ErrorBoundary.js';
import '../../utils/Anchorable.js';
import './ContainerElement.js';
import 'wix-rich-content-common';
import '../../utils/paywallSeo.js';

var __defProp = Object.defineProperty;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {
    enumerable: true,
    configurable: true,
    writable: true,
    value
}) : obj[key] = value;
var __spreadValues = (a, b) => {
    for (var prop in b || (b = {}))
        if (__hasOwnProp.call(b, prop))
            __defNormalProp(a, prop, b[prop]);
    if (__getOwnPropSymbols)
        for (var prop of __getOwnPropSymbols(b)) {
            if (__propIsEnum.call(b, prop))
                __defNormalProp(a, prop, b[prop]);
        }
    return a;
};
const SPECIAL_CONVERTERS = {
    [Node_Type.EXTERNAL]: fromExternalNode
};
const getPluginRenderers = (context, typeMappers, nodeViewRenderers, SpoilerViewerWrapper) => {
    const convertedTypeMappers = Object.entries(typeMappers).reduce(
        (renderers, [type, pluginComponent]) => {
            var _a;
            return __spreadValues(__spreadValues({}, renderers), (_a = SPECIAL_CONVERTERS[type]) == null ? void 0 : _a.call(SPECIAL_CONVERTERS, {
                pluginComponent,
                type,
                context,
                SpoilerViewerWrapper
            }));
        }, {}
    );
    return __spreadValues(__spreadValues({}, convertedTypeMappers), nodeViewRenderers);
};

export {
    SPECIAL_CONVERTERS,
    getPluginRenderers
};
//# sourceMappingURL=getPluginRenderers.js.map