const _Decorators = class {
    constructor(decorators, context) {
        this.decorators = [];
        this.textualDecorators = [];
        this.decorators = decorators.filter((decorator) => !decorator.isText).sort(_Decorators.sort).reverse();
        this.textualDecorators = decorators.filter((decorator) => decorator.isText);
        this.context = context;
    }
    // sort function must be aligned with Tiptap sort to ensure correct Editor and Viewer decorations order
    // https://github.com/ueberdosis/tiptap/blob/develop/packages/core/src/ExtensionManager.ts#L160
    static sort(a, b) {
        var _a, _b;
        const priorityA = (_a = a.priority) != null ? _a : _Decorators.defaultPriority;
        const priorityB = (_b = b.priority) != null ? _b : _Decorators.defaultPriority;
        if (priorityA > priorityB) {
            return -1;
        }
        if (priorityA < priorityB) {
            return 1;
        }
        return 0;
    }
    static of (decorators, context) {
        return new _Decorators(decorators, context);
    }
    getDecorators() {
        return this.decorators;
    }
    merge(decorators) {
        return _Decorators.of([...this.decorators, ...decorators.getDecorators()], this.context);
    }
    apply(element, node, isRoot) {
        return this.decorators.reduce((decorated, decorator) => {
            if (decorator.rule(node)) {
                return decorator.decorate({
                    node,
                    context: this.context,
                    element: decorated,
                    isRoot
                });
            }
            return decorated;
        }, element);
    }
    applyTextual(node) {
        const decorator = this.textualDecorators.find((decorator2) => decorator2.rule(node));
        return decorator == null ? void 0 : decorator.decorate({
            node,
            context: this.context,
            isRoot: false
        });
    }
};
let Decorators = _Decorators;
Decorators.defaultPriority = 100;

export {
    Decorators
};
//# sourceMappingURL=nodeViewDecorators.js.map