import {
    p as pluginsStrategy,
    a as pipe
} from './pluginsStrategy-c75e7fd1.js';
import {
    merge
} from 'lodash';
import {
    IMAGE_TYPE,
    GALLERY_TYPE
} from 'wix-rich-content-common';
import {
    convertRelStringToObject,
    convertRelObjectToString
} from 'wix-rich-content-common/libs/linkConverters';
import {
    applyBIGenerics
} from './biUtils/applyGenericParams.js';

var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {
    enumerable: true,
    configurable: true,
    writable: true,
    value
}) : obj[key] = value;
var __spreadValues = (a, b) => {
    for (var prop in b || (b = {}))
        if (__hasOwnProp.call(b, prop))
            __defNormalProp(a, prop, b[prop]);
    if (__getOwnPropSymbols)
        for (var prop of __getOwnPropSymbols(b)) {
            if (__propIsEnum.call(b, prop))
                __defNormalProp(a, prop, b[prop]);
        }
    return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
const combineMappers = (mappers, ...args) => {
    if (!mappers || mappers.some((resolver) => typeof resolver !== "function")) {
        console.warn(`${mappers} is expected to be a function array`);
        return {};
    }
    return mappers.reduce((map, mapper) => Object.assign(map, mapper(...args)), {});
};

function mergeViewerProps({
    _rcProps,
    isMobile,
    addAnchors,
    onError,
    mediaSettings = {},
    linkSettings = {},
    textAlignment,
    experiments,
    iframeSandboxDomain,
    theme,
    plugins = [],
    content,
    viewerProps,
    onNodeClick,
    debugMode
}) {
    const rcvPluginProps = pluginsStrategy({
        plugins,
        viewerProps
    });
    const {
        pauseMedia,
        disableRightClick
    } = mediaSettings;
    const {
        anchorTarget = "_blank", customAnchorScroll
    } = linkSettings;
    let {
        relValue,
        rel
    } = linkSettings;
    if (relValue) {
        console.warn(
            // eslint-disable-next-line max-len
            `relValue is deprecated, Please use rel prop instead.`
        );
        rel = convertRelStringToObject(relValue) || rel;
    }
    relValue = convertRelObjectToString(rel);
    const disableDownload = (mediaSettings == null ? void 0 : mediaSettings.disableDownload) || disableRightClick;
    const ricosPropsToMerge = {
        addAnchors,
        isMobile,
        config: {
            uiSettings: {
                disableDownload
            }
        },
        content,
        onError,
        helpers: {},
        disabled: pauseMedia,
        anchorTarget,
        relValue,
        customAnchorScroll,
        textAlignment,
        experiments,
        iframeSandboxDomain,
        theme,
        onNodeClick
    };
    const mergedRCProps = pipe(
        merge({
            locale: "en",
            config: {}
        }, rcvPluginProps, _rcProps, ricosPropsToMerge, viewerProps),
        applyBIGenerics(() => {
            var _a;
            return (_a = content == null ? void 0 : content.metadata) == null ? void 0 : _a.id;
        })
    );
    return __spreadProps(__spreadValues({}, mergedRCProps), {
        debugMode,
        typeMappers: combineMappers(mergedRCProps.typeMappers || [])
    });
}

function hasFullscreen(config) {
    const {
        [IMAGE_TYPE]: imageConfig, [GALLERY_TYPE]: galleryConfig
    } = config || {};
    const needsFullscreenProvider = !(imageConfig == null ? void 0 : imageConfig.onExpand) || !(galleryConfig == null ? void 0 : galleryConfig.onExpand);
    const isExpandDisabled = (!imageConfig || imageConfig.disableExpand) && (!galleryConfig || (galleryConfig == null ? void 0 : galleryConfig.disableExpand));
    return !isExpandDisabled && needsFullscreenProvider;
}

export {
    combineMappers,
    hasFullscreen,
    mergeViewerProps
};
//# sourceMappingURL=utils.js.map