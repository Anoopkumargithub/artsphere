var version = "10.22.0";

var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {
    enumerable: true,
    configurable: true,
    writable: true,
    value
}) : obj[key] = value;
var __spreadValues = (a, b) => {
    for (var prop in b || (b = {}))
        if (__hasOwnProp.call(b, prop))
            __defNormalProp(a, prop, b[prop]);
    if (__getOwnPropSymbols)
        for (var prop of __getOwnPropSymbols(b)) {
            if (__propIsEnum.call(b, prop))
                __defNormalProp(a, prop, b[prop]);
        }
    return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var __objRest = (source, exclude) => {
    var target = {};
    for (var prop in source)
        if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
            target[prop] = source[prop];
    if (source != null && __getOwnPropSymbols)
        for (var prop of __getOwnPropSymbols(source)) {
            if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
                target[prop] = source[prop];
        }
    return target;
};
const applyBIGenerics = (getContentId) => (_a) => {
    var _b = _a,
        {
            helpers = {}
        } = _b,
        rest = __objRest(_b, ["helpers"]);
    return __spreadProps(__spreadValues({}, rest), {
        helpers: __spreadProps(__spreadValues({}, helpers), {
            onViewerLoaded: (args) => {
                var _a2;
                return (_a2 = helpers.onViewerLoaded) == null ? void 0 : _a2.call(helpers, __spreadProps(__spreadValues({}, args), {
                    version,
                    contentId: getContentId()
                }));
            },
            onViewerAction: (pluginId, actionName, value) => {
                var _a2;
                return (_a2 = helpers.onViewerAction) == null ? void 0 : _a2.call(helpers, pluginId, actionName, value, getContentId());
            }
        })
    });
};

export {
    applyBIGenerics
};
//# sourceMappingURL=applyGenericParams.js.map