const getQueryParamsFromUrl = (url) => Array.from(new URL(url).searchParams.entries()).reduce((params, [key, value]) => ({ ...params,
    [key]: value
}), {});
const DEV_QUERY_PARAMS = [
    'ReactSource',
    'EditorSource',
    'experiments',
    'petri_ovr',
    'WixCodeRuntimeSource',
    'js-wixcode-sdk-override',
    'debug',
];
const doesNotContainDevQueryParameter = (queryParameters) => Object.keys(queryParameters).every(key => !DEV_QUERY_PARAMS.includes(key));
const forceReport = (queryParameters) => queryParameters.forceReportSentry === 'true';
const getUrlsFromData = (data) => [
    data ? .request ? .headers ? .Referer,
    data ? .request ? .url,
];
const shouldSendReportByUrl = (url) => {
    try {
        const queryParameters = getQueryParamsFromUrl(url || '');
        return (forceReport(queryParameters) ||
            doesNotContainDevQueryParameter(queryParameters));
    } catch {
        return true;
    }
};
const shouldSendReportByUrls = (data) => getUrlsFromData(data).every(shouldSendReportByUrl);
const validators = [shouldSendReportByUrls];
export const shouldSendReport = (data, originalCallback) => validators.concat(originalCallback || ((x) => x)).every(v => v(data));
//# sourceMappingURL=shouldSendReport.js.map