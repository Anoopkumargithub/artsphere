import {
    find,
    get
} from 'lodash';
import {
    Maybe
} from '@wix/wix-data-client-wix-code-adt';
import {
    isFieldReferencedOrNested
} from './isFieldReferencedOrNested';
import {
    getReferenceFieldName,
    FIELD_PATH_SEPARATOR,
} from './referenceFieldPath';
export const getFieldByFieldName = (fields, fieldName) => find(fields, {
    name: fieldName
});
export const getReferencedCollectionName = (fields, fieldName) => {
    const field = getFieldByFieldName(fields, fieldName);
    return get(field, 'referencedCollection');
};
export const getFieldTypeByFieldName = (fields, fieldName) => {
    const field = getFieldByFieldName(fields, fieldName);
    return get(field, 'type');
};
export const getReferencingField = (fields, fieldName) => {
    if (!isFieldReferencedOrNested(fieldName)) {
        return Maybe.Nothing();
    }
    const referenceFieldName = getReferenceFieldName(fieldName);
    return Maybe.fromNullable(getFieldByFieldName(fields, referenceFieldName));
};
export const getReferencedNestedRootFieldName = (fieldPath) => getFieldParts(fieldPath).slice(0, 2).join(FIELD_PATH_SEPARATOR);
export const getNestedRootFieldName = (fieldPath) => getFieldParts(fieldPath)[0];
export const getFieldParts = (fieldPath) => fieldPath.split(FIELD_PATH_SEPARATOR);
//# sourceMappingURL=fieldSelectors.js.map