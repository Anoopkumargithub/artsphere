var __extends = (this && this.__extends) || (function() {
    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({
                    __proto__: []
                }
                instanceof Array && function(d, b) {
                    d.__proto__ = b;
                }) ||
            function(d, b) {
                for (var p in b)
                    if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
            };
        return extendStatics(d, b);
    };
    return function(d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);

        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import {
    codes,
    messages,
    wixDataError,
    schemaNotFoundError
} from '@wix/wix-data-errors';

function rejectWithCollectionDeleted(collectionName) {
    var message = messages.collectionDeleted(collectionName);
    return rejectWithError(message, codes.CollectionDeleted);
}

function rejectWithError(message, code) {
    return Promise.reject(wixDataError(message, code));
}
var ExtendableError = /** @class */ (function(_super) {
    __extends(ExtendableError, _super);

    function ExtendableError(message, Class) {
        var _this = _super.call(this, message) || this;
        Object.setPrototypeOf(_this, Class.prototype);
        _this.name = Class.name;
        if (Error.captureStackTrace) {
            Error.captureStackTrace(_this, Class);
        } else {
            _this.stack = (new Error(message)).stack;
        }
        return _this;
    }
    return ExtendableError;
}(Error));
var FailedRequestException = /** @class */ (function(_super) {
    __extends(FailedRequestException, _super);

    function FailedRequestException(reason) {
        var _this = _super.call(this, reason, FailedRequestException) || this;
        _this.reason = reason;
        _this.message = reason;
        return _this;
    }
    return FailedRequestException;
}(ExtendableError));
var UnsuccessfulResponseException = /** @class */ (function(_super) {
    __extends(UnsuccessfulResponseException, _super);

    function UnsuccessfulResponseException(status, responseText, message, requestId) {
        var _this = _super.call(this, message, UnsuccessfulResponseException) || this;
        _this.status = status;
        _this.responseText = responseText;
        _this.requestId = requestId;
        return _this;
    }
    return UnsuccessfulResponseException;
}(ExtendableError));
export {
    FailedRequestException,
    UnsuccessfulResponseException,
    rejectWithCollectionDeleted,
    schemaNotFoundError,
    codes as errorCodes
};
//# sourceMappingURL=errors.js.map